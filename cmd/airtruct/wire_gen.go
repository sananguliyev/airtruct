// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/sananguliyev/airtruct/internal/api"
	"github.com/sananguliyev/airtruct/internal/api/coordinator"
	"github.com/sananguliyev/airtruct/internal/cli"
	"github.com/sananguliyev/airtruct/internal/config"
	"github.com/sananguliyev/airtruct/internal/executor"
	"github.com/sananguliyev/airtruct/internal/persistence"
)

import (
	_ "github.com/warpstreamlabs/bento/public/components/all"
)

// Injectors from wire.go:

func InitializeCoordinatorCommand() *cli.CoordinatorCLI {
	databaseConfig := config.NewDatabaseConfig()
	db := persistence.NewGormDB(databaseConfig)
	workerRepository := persistence.NewWorkerRepository(db)
	componentRepository := persistence.NewComponentRepository(db)
	streamRepository := persistence.NewStreamRepository(db)
	workerStreamRepository := persistence.NewWorkerStreamRepository(db)
	nodeConfig := config.NewNodeConfig()
	coordinatorAPI := coordinator.NewCoordinatorAPI(workerRepository, componentRepository, streamRepository, workerStreamRepository, nodeConfig)
	coordinatorExecutor := executor.NewCoordinatorExecutor(workerRepository, streamRepository, workerStreamRepository)
	coordinatorCLI := cli.NewCoordinatorCLI(coordinatorAPI, coordinatorExecutor, nodeConfig)
	return coordinatorCLI
}

func InitializeWorkerCommand() *cli.WorkerCLI {
	nodeConfig := config.NewNodeConfig()
	workerExecutor := executor.NewWorkerExecutor(nodeConfig)
	workerAPI := api.NewWorkerAPI(workerExecutor)
	workerCLI := cli.NewWorkerCLI(workerAPI, workerExecutor, nodeConfig)
	return workerCLI
}
