// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: worker.proto

package protogen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssignStreamRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkerStreamId int64                  `protobuf:"varint,1,opt,name=worker_stream_id,json=workerStreamId,proto3" json:"worker_stream_id,omitempty"`
	Config         string                 `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AssignStreamRequest) Reset() {
	*x = AssignStreamRequest{}
	mi := &file_worker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignStreamRequest) ProtoMessage() {}

func (x *AssignStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignStreamRequest.ProtoReflect.Descriptor instead.
func (*AssignStreamRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{0}
}

func (x *AssignStreamRequest) GetWorkerStreamId() int64 {
	if x != nil {
		return x.WorkerStreamId
	}
	return 0
}

func (x *AssignStreamRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type FetchStreamRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkerStreamId int64                  `protobuf:"varint,1,opt,name=worker_stream_id,json=workerStreamId,proto3" json:"worker_stream_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FetchStreamRequest) Reset() {
	*x = FetchStreamRequest{}
	mi := &file_worker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchStreamRequest) ProtoMessage() {}

func (x *FetchStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchStreamRequest.ProtoReflect.Descriptor instead.
func (*FetchStreamRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{1}
}

func (x *FetchStreamRequest) GetWorkerStreamId() int64 {
	if x != nil {
		return x.WorkerStreamId
	}
	return 0
}

type FetchStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        WorkerStreamStatus     `protobuf:"varint,1,opt,name=status,proto3,enum=protorender.WorkerStreamStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchStreamResponse) Reset() {
	*x = FetchStreamResponse{}
	mi := &file_worker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchStreamResponse) ProtoMessage() {}

func (x *FetchStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchStreamResponse.ProtoReflect.Descriptor instead.
func (*FetchStreamResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{2}
}

func (x *FetchStreamResponse) GetStatus() WorkerStreamStatus {
	if x != nil {
		return x.Status
	}
	return WorkerStreamStatus_waiting
}

type CompleteStreamRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkerStreamId int64                  `protobuf:"varint,1,opt,name=worker_stream_id,json=workerStreamId,proto3" json:"worker_stream_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CompleteStreamRequest) Reset() {
	*x = CompleteStreamRequest{}
	mi := &file_worker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteStreamRequest) ProtoMessage() {}

func (x *CompleteStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteStreamRequest.ProtoReflect.Descriptor instead.
func (*CompleteStreamRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{3}
}

func (x *CompleteStreamRequest) GetWorkerStreamId() int64 {
	if x != nil {
		return x.WorkerStreamId
	}
	return 0
}

type IngestRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkerStreamId int64                  `protobuf:"varint,1,opt,name=worker_stream_id,json=workerStreamId,proto3" json:"worker_stream_id,omitempty"`
	Method         string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Path           string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	ContentType    string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Payload        []byte                 `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *IngestRequest) Reset() {
	*x = IngestRequest{}
	mi := &file_worker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestRequest) ProtoMessage() {}

func (x *IngestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestRequest.ProtoReflect.Descriptor instead.
func (*IngestRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{4}
}

func (x *IngestRequest) GetWorkerStreamId() int64 {
	if x != nil {
		return x.WorkerStreamId
	}
	return 0
}

func (x *IngestRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *IngestRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *IngestRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *IngestRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type IngestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Response      []byte                 `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestResponse) Reset() {
	*x = IngestResponse{}
	mi := &file_worker_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestResponse) ProtoMessage() {}

func (x *IngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestResponse.ProtoReflect.Descriptor instead.
func (*IngestResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{5}
}

func (x *IngestResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *IngestResponse) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_worker_proto protoreflect.FileDescriptor

const file_worker_proto_rawDesc = "" +
	"\n" +
	"\fworker.proto\x12\vprotorender\x1a\x1bgoogle/protobuf/empty.proto\x1a\fcommon.proto\"W\n" +
	"\x13AssignStreamRequest\x12(\n" +
	"\x10worker_stream_id\x18\x01 \x01(\x03R\x0eworkerStreamId\x12\x16\n" +
	"\x06config\x18\x02 \x01(\tR\x06config\">\n" +
	"\x12FetchStreamRequest\x12(\n" +
	"\x10worker_stream_id\x18\x01 \x01(\x03R\x0eworkerStreamId\"N\n" +
	"\x13FetchStreamResponse\x127\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1f.protorender.WorkerStreamStatusR\x06status\"A\n" +
	"\x15CompleteStreamRequest\x12(\n" +
	"\x10worker_stream_id\x18\x01 \x01(\x03R\x0eworkerStreamId\"\xa2\x01\n" +
	"\rIngestRequest\x12(\n" +
	"\x10worker_stream_id\x18\x01 \x01(\x03R\x0eworkerStreamId\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x18\n" +
	"\apayload\x18\x05 \x01(\fR\apayload\"L\n" +
	"\x0eIngestResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x1a\n" +
	"\bresponse\x18\x02 \x01(\fR\bresponse2\x8d\x03\n" +
	"\x06Worker\x12D\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a\x1b.protorender.CommonResponse\"\x00\x12O\n" +
	"\fAssignStream\x12 .protorender.AssignStreamRequest\x1a\x1b.protorender.CommonResponse\"\x00\x12R\n" +
	"\vFetchStream\x12\x1f.protorender.FetchStreamRequest\x1a .protorender.FetchStreamResponse\"\x00\x12S\n" +
	"\x0eCompleteStream\x12\".protorender.CompleteStreamRequest\x1a\x1b.protorender.CommonResponse\"\x00\x12C\n" +
	"\x06Ingest\x12\x1a.protorender.IngestRequest\x1a\x1b.protorender.IngestResponse\"\x00B4Z2github.com/sananguliyev/airtruct/internal/protogenb\x06proto3"

var (
	file_worker_proto_rawDescOnce sync.Once
	file_worker_proto_rawDescData []byte
)

func file_worker_proto_rawDescGZIP() []byte {
	file_worker_proto_rawDescOnce.Do(func() {
		file_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_worker_proto_rawDesc), len(file_worker_proto_rawDesc)))
	})
	return file_worker_proto_rawDescData
}

var file_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_worker_proto_goTypes = []any{
	(*AssignStreamRequest)(nil),   // 0: protorender.AssignStreamRequest
	(*FetchStreamRequest)(nil),    // 1: protorender.FetchStreamRequest
	(*FetchStreamResponse)(nil),   // 2: protorender.FetchStreamResponse
	(*CompleteStreamRequest)(nil), // 3: protorender.CompleteStreamRequest
	(*IngestRequest)(nil),         // 4: protorender.IngestRequest
	(*IngestResponse)(nil),        // 5: protorender.IngestResponse
	(WorkerStreamStatus)(0),       // 6: protorender.WorkerStreamStatus
	(*emptypb.Empty)(nil),         // 7: google.protobuf.Empty
	(*CommonResponse)(nil),        // 8: protorender.CommonResponse
}
var file_worker_proto_depIdxs = []int32{
	6, // 0: protorender.FetchStreamResponse.status:type_name -> protorender.WorkerStreamStatus
	7, // 1: protorender.Worker.HealthCheck:input_type -> google.protobuf.Empty
	0, // 2: protorender.Worker.AssignStream:input_type -> protorender.AssignStreamRequest
	1, // 3: protorender.Worker.FetchStream:input_type -> protorender.FetchStreamRequest
	3, // 4: protorender.Worker.CompleteStream:input_type -> protorender.CompleteStreamRequest
	4, // 5: protorender.Worker.Ingest:input_type -> protorender.IngestRequest
	8, // 6: protorender.Worker.HealthCheck:output_type -> protorender.CommonResponse
	8, // 7: protorender.Worker.AssignStream:output_type -> protorender.CommonResponse
	2, // 8: protorender.Worker.FetchStream:output_type -> protorender.FetchStreamResponse
	8, // 9: protorender.Worker.CompleteStream:output_type -> protorender.CommonResponse
	5, // 10: protorender.Worker.Ingest:output_type -> protorender.IngestResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_worker_proto_init() }
func file_worker_proto_init() {
	if File_worker_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_worker_proto_rawDesc), len(file_worker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_worker_proto_goTypes,
		DependencyIndexes: file_worker_proto_depIdxs,
		MessageInfos:      file_worker_proto_msgTypes,
	}.Build()
	File_worker_proto = out.File
	file_worker_proto_goTypes = nil
	file_worker_proto_depIdxs = nil
}
