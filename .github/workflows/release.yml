name: Release Go Binaries & Docker Image

on:
  push:
    tags:
      - v*
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            targets: linux-amd64,linux-arm64
            setup: |
              sudo apt-get update
              sudo apt-get install -y build-essential
              sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          - os: ubuntu-latest
            targets: windows-amd64,windows-arm64
            setup: |
              sudo apt-get update
              sudo apt-get install -y build-essential
              sudo apt-get install -y gcc-mingw-w64-x86-64 gcc-mingw-w64-i686
              sudo apt-get install -y aarch64-w64-mingw32-gcc
          - os: macos-latest
            targets: darwin-amd64,darwin-arm64
            setup: |
              echo "Using native macOS environment"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: ${{ matrix.setup }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Set up Docker Buildx (Linux builds only)
        if: matrix.targets == 'linux-amd64,linux-arm64'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (Linux builds only)
        if: matrix.targets == 'linux-amd64,linux-arm64'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean --config=.goreleaser.yaml --build-id=${{ matrix.targets }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
